/*
 postal.diagnostics
 Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT (http://www.opensource.org/licenses/mit-license) & GPL (http://www.opensource.org/licenses/gpl-license)
 Version 0.7.0
 */
(function(e,t){typeof module=="object"&&module.exports?module.exports=function(e,n){return t(e,n)}:typeof define=="function"&&define.amd?define(["underscore","postal"],function(n,r){return t(n,r,e)}):t(e._,e.postal,e)})(typeof window!="undefined"?window:this,function(e,t,n,r){t.diagnostics={};var i=function(n){n=n||{},e.extend(this,{active:!0,filters:[],name:e.uniqueId("wiretap_")},n),this.removeWireTap=t.addWireTap(e.bind(this.wiretapFn,this)),t.diagnostics[this.name]&&t.diagnostics[this.name].removeWireTap(),t.diagnostics[this.name]=this};return i.prototype.wiretapFn=function(t,n){if(!this.active)return;if(!this.filters.length||e.any(this.filters,function(e){return this.applyFilter(e,n)},this))try{this.writer(this.serialize(n))}catch(r){this.writer("Unable to serialize envelope: "+r)}},i.prototype.applyFilter=function(t,n){var r=0,i=0;return e.each(t,function(t,s){n[s]&&(i++,e.isRegExp(t)&&t.test(n[s])?r++:e.isObject(n[s])&&!e.isArray(n[s])?this.applyFilter(t,n[s])&&r++:e.isEqual(n[s],t)&&r++)},this),r===i},i.prototype.clearFilters=function(){this.filters=[]},i.prototype.removeFilter=function(t){this.filters=e.filter(this.filters,function(n){return!e.isEqual(n,t)})},i.prototype.addFilter=function(t){e.isArray(t)||(t=[t]),e.each(t,function(t){(this.filters.length===0||!e.any(this.filters,function(n){return e.isEqual(n,t)}))&&this.filters.push(t)},this)},i.prototype.serialize=function(e){if(typeof JSON=="undefined")throw new Error("This browser or environment does not provide JSON support");return JSON.stringify(e,null,4)},i.prototype.writer=function(e){console.log(e)},t.diagnostics.DiagnosticsWireTap=i,i})
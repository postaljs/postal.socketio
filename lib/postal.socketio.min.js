/*
 postal.socketio
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.0.0
 */
(function(e,n){"object"==typeof module&&module.exports?module.exports=function(e,t,s,i,o){return n(e,t,s,i,o)}:"function"==typeof define&&define.amd?define(["underscore","socket.io","postal.federation","machina","riveter"],function(t,s,i,o,c){return n(t,s,i,o,c,e)}):e.postal=n(e._,e.io,e.postal,e.machina,e.riveter,e)})(this,function(e,n,t,s,i,o,c){function r(n){var t=e.find(S.remotes,function(e){return e.target===n});return t||(S.staged=e.without(S.staged,n),t=I.getInstance(n),n.on(l,e.bind(t.onMessage,t)),S.remotes.push(t)),t}var a="socketio",d=function(){},u={enabled:!0,autoSignal:!0,migrate:!0},f=u,g="undefined"==typeof window,h=g?"postal.fromServer":"postal.fromClient",l=g?"postal.fromClient":"postal.fromServer",m=g?["disconnect"]:["connect","connecting","disconnect","connect_failed","error","reconnect","reconnect_failed","reconnecting"],p="undefined"!=typeof process&&"function"==typeof process.nextTick?process.nextTick:e.defer,v=function(n,t){var s=e.find(this.remotes,function(e){return e.instanceId===t});return s&&n.push(s),n},y=function(n,t){var s=e.find(this.remotes,function(e){return e.target===t});return s&&n.push(s),n},k=function(e){e.disconnect()},I=s.Fsm.extend({initialize:function(){var n=this;n.pings={},n.handshakeComplete=!1,n.target&&e.each(m,function(e){n.target.on(e,function(){var t=Array.prototype.slice.call(arguments,0);t.unshift(e),n.handle.apply(n,t)})}),n.initialState=g?n.target.disconnected?"disconnected":"connected":n.target.socket.connected?"connected":"disconnected"},transportName:a,initialState:"disconnected",states:{disconnected:{send:function(e){f.migrate&&(this.messageBundle||(this.messageBundle=t.fedx.getPackingSlip("bundle"),this.messageBundle.packingSlips=[]),this.messageBundle.packingSlips.push(e))},connect:"connected",reconnect:"connected"},connected:{_onEnter:function(){var e,n=this;(e=n.messageBundle)&&(p(function(){n.send(e)}),n.messageBundle=c)},send:function(e){this.target.emit(h,e)},sendQueued:function(){var e,n=this;(e=n.messageBundle)&&(p(function(){n.send(e)}),n.messageBundle=c)},onMessage:function(e){this.shouldProcess()&&t.fedx.onFederatedMsg({transport:this.transportName,packingSlip:e,source:this})},connecting:"disconnected",disconnect:"disconnected",connect_failed:"disconnected",reconnect_failed:"disconnected",reconnecting:"disconnected"}},decommission:function(){return this.target.removeAllListeners(),this.off(),this.target=c,S.remotes=e.without(S.remotes,this),this.messageBundle},onMessage:function(e){this.handle("onMessage",e)},send:function(e){this.handle("send",e)},shouldProcess:function(){return f.enabled},setInstanceId:function(n){var t,s=this;this.instanceId=n,t=e.find(S.remotes,function(e){return e!==this&&e.instanceId===n},this),t&&f.migrate&&p(function(){s.send(t.decommission())})}});i(I),I.inherits(t.fedx.FederationClient,{getInstance:function(e,n,t){return new I({target:e,options:n||{},instanceId:t})}});var S=t.fedx.transports[a]={staged:[],remotes:[],SocketIoClient:I,configure:function(n){return n&&(f=e.defaults(n,u)),f},disconnect:function(n){n=n||{};var t=n.instanceId?e.reduce(e.isArray(n.instanceId)?n.instanceId:[n.instanceId],v,[],this):n.target?e.reduce(e.isArray(n.target)?n.target:[n.target],y,[],this):this.remotes;n.doNotNotify||e.each(t,k,this),this.remotes=e.without.apply(null,[this.remotes].concat(t))},getTargets:g?function(){return this.staged}:function(){return e.reduce(n.sockets,function(n,t){return e.each(t.namespaces,function(e){n.push(e)}),n},[])},sendMessage:function(n){e.each(this.remotes,function(e){e.sendMessage(n)})},signalReady:function(n,t){1===arguments.length&&("function"==typeof n?(t=n,n=[]):t=d),n=e.isArray(n)?n:[n],n=n.length?n:this.getTargets(),e.each(n,function(e){var n=r(e);n.sendPing(t)},this)}};return g&&n.sockets.on("connection",function(e){S.staged.push(e),r(e),f.autoSignal&&S.signalReady(e)}),t});